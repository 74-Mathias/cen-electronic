EZ : Rajouter les chemins au plus court
EZ : Désactiver les TargetActions quand il y a un obstacle
EZ : Angle de correction
                      
* Faire un recu pour JLB
* Imprimer le Poster

P1 
* Mettre en place le 1er sonar
* Mettre un 2ème sonar pour les mouvements en arrières
* Optimiser la gestion des chemins contre le robot adverse.

P2 

* Gérer le fait que si on est bloqué avant d'arriver à la target, celle-ci ne doit pas
etre marquée comme DONE !
* Gérer la stratégie du robot en fonction de l'adversaire !!!
* Vérifier le temps d'exécution de dijkstra sur les chemins importants
* Mettre des points de sortie pour les chemins
* Tester intensivement la gestion de collision / blocage de roues

NEXT YEAR

* Faire la gestion de la manoeuvre de recalibrage 
* Optimiser le calcul de changement de stratégie si le robot en face n'a pas changer
* Problème au niveau de l'envoie de "'" pour arrêter les servos. Provoque un reboot de la carte alors que | marche correctement.
* Séparer le RobotSonarDetectorDevice de la partie non Device
* Virer les trucs inutiles au niveau informatique genre Cable Ethernet
* Faire le ménage au niveau des fichiers c : robotDetector.c
- Faire fonctionner la stratégie au niveau du projet Eclipse
- Implémenter et tester la gestion de l'enchainement des trajectoires
- Faire un nouveau DriverDataDispatcher spécial UART si c'est possible pour pouvoir relier des cartes en UART en maitre esclave :)
- Installer GIT sur la carte mère embarquée du PC
- Tester de pouvoir récupérer directement un programme en mettant un remote GIT différent
- Faire des en têtes à la manière des Jennic : MOV, LEF, RIG ...


AUTRES :

- Idées pour l'année prochaine :
- Mode PAS à PAS à faire au niveau de l'informatique

autre modif de test

ACHATS à FAIRE

- Petits Colliers
- Contacteurs grandes lames
- Connecteurs vierges de 3 pattes pour Servo, ADC ...
- Capteurs de couleurs
